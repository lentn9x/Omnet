//
// Generated file, do not edit! Created by nedtool 4.6 from NeighborUpdatePkt.msg.
//

#ifndef _NEIGHBORUPDATEPKT_M_H_
#define _NEIGHBORUPDATEPKT_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "NetwPkt_m.h"
#include "GeoNode.h"
// }}

/**
 * Class generated from <tt>NeighborUpdatePkt.msg:12</tt> by nedtool.
 * <pre>
 * message NeighborUpdatePkt extends NetwPkt
 * {
 *     GeoNode nodeInfo;
 * }
 * </pre>
 */
class NeighborUpdatePkt : public ::NetwPkt
{
  protected:
    GeoNode nodeInfo_var;

  private:
    void copy(const NeighborUpdatePkt& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const NeighborUpdatePkt&);

  public:
    NeighborUpdatePkt(const char *name=NULL, int kind=0);
    NeighborUpdatePkt(const NeighborUpdatePkt& other);
    virtual ~NeighborUpdatePkt();
    NeighborUpdatePkt& operator=(const NeighborUpdatePkt& other);
    virtual NeighborUpdatePkt *dup() const {return new NeighborUpdatePkt(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual GeoNode& getNodeInfo();
    virtual const GeoNode& getNodeInfo() const {return const_cast<NeighborUpdatePkt*>(this)->getNodeInfo();}
    virtual void setNodeInfo(const GeoNode& nodeInfo);
};

inline void doPacking(cCommBuffer *b, NeighborUpdatePkt& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, NeighborUpdatePkt& obj) {obj.parsimUnpack(b);}


#endif // ifndef _NEIGHBORUPDATEPKT_M_H_

